name: Build and deploy .NET application to container app gym

on:
  push:
    branches:
      - main

jobs:
  setup_acr_and_push_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev]
    steps:
    - name: Checkout to the branch
      uses: actions/checkout@v3
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.GYMAPP_AZURE_CREDENTIALS }}
#    - name: Set environment variables from json
#      run: |
#        echo "CONFIG_VALUES=$(cat ./infrastructure/configurations/${{ matrix.env }}.json)" >> $GITHUB_ENV
    - name: Set environment variables from json
      run: |
        echo "CONFIG_VALUES=$(jq -c . < ./infrastructure/configurations/dev.json)" >> $GITHUB_ENV
      
    - name: Deploy resource group
      run: az group create --name ${{ fromJson(env.CONFIG_VALUES).parameters.resourceGroupName.value }} --location 'westeurope'
    - name: Log in to container registry
      run: az acr login --name 'gymappcontainers'
    #- name: Build and push container image to registry 
    #  uses: azure/container-apps-deploy-action@v1
    #  with: 
    #    appSourcePath: ${{ github.workspace }}  
    #    registryUrl: gymappcontainers.azurecr.io 
    #    registryUsername: ${{ secrets.GYM_APP_REGISTRY_USERNAME }} 
    #    registryPassword: ${{ secrets.GYM_APP_REGISTRY_PASSWORD }} 
    #    containerAppName: gym-app-dev-container-test 
    #    resourceGroup: ${{ fromJson(env.CONFIG_VALUES).parameters.resourceGroupName.value }}
    #    runtimeStack: 'dotnetcore:7.0'    
    #- name: Build and push container image to registry
    #  run: |
    #    docker build -t ${{ fromJson(env.CONFIG_VALUES).parameters.acrName.value }}.azurecr.io/${{ fromJson(env.CONFIG_VALUES).parameters.dockerName.value }}:${{ github.sha }} ../..
    #    docker push ${{ fromJson(env.CONFIG_VALUES).parameters.acrName.value }}.azurecr.io/${{ fromJson(env.CONFIG_VALUES).parameters.dockerName.value }}:${{ github.sha }}
    - name: Build and push container image to registry 
      uses: azure/container-apps-deploy-action@v2 
      with: 
        appSourcePath: ${{ github.workspace }}  
        registryUrl: gymappcontainers.azurecr.io 
        registryUsername: ${{ secrets.GYM_APP_REGISTRY_USERNAME }} 
        registryPassword: ${{ secrets.GYM_APP_REGISTRY_PASSWORD }} 
        containerAppName: gym-app-dev-container-test
        resourceGroup: ${{ fromJson(env.CONFIG_VALUES).parameters.resourceGroupName.value }}
        imageToBuild: gymappcontainers.azurecr.io/gym-app-dev-container-test:${{ github.sha }} 
        dockerfilePath: ./src/GymApp/Dockerfile 
  deploy:
    runs-on: ubuntu-latest
    needs: setup_acr_and_push_image
    strategy:
      matrix:
        env: [dev, qa, prod]
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.GYMAPP_AZURE_CREDENTIALS }}
    - name: Set environment variables from json
      run: |
        echo "CONFIG_VALUES=$(cat ./infrastructure/configurations/${{ matrix.env }}.json)" >> $GITHUB_ENV
    - name: Deploy to containerapp
      run: az deployment group create --resource-group ${{ fromJson(env.CONFIG_VALUES).parameters.resourceGroupName.value }} --template-file ./infrastructure/main.bicep --parameters $CONFIG_VALUES
    - name: Logout
      run: az logout
